"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const electron_1 = require("electron");
class RequestHandler {
    constructor(windowId, editorId, handlers) {
        this.windowId = windowId;
        this.editorId = editorId;
        this.handlers = handlers;
        this.handleRequest = (e) => {
            if (e.editorId !== this.editorId || e.windowId !== this.windowId)
                return;
            const func = this.handlers[e.cmd];
            const reply = func(e.args);
            electron_1.remote.ipcMain.emit('markdown-preview-plus:editor-reply', {
                editorId: e.editorId,
                windowId: e.windowId,
                forWindowId: e.forWindowId,
                idx: e.idx,
                reply,
            });
        };
        electron_1.remote.ipcMain.on('markdown-preview-plus:editor-request', this.handleRequest);
    }
    dispose() {
        electron_1.remote.ipcMain.removeListener('markdown-preview-plus:editor-request', this.handleRequest);
    }
}
exports.RequestHandler = RequestHandler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdC1oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21hcmtkb3duLXByZXZpZXctdmlldy9pcGMvcmVxdWVzdC1oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWlDO0FBK0JqQztJQUNFLFlBQ21CLFFBQWdCLEVBQ2hCLFFBQWdCLEVBQ2hCLFFBQWdCO1FBRmhCLGFBQVEsR0FBUixRQUFRLENBQVE7UUFDaEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUNoQixhQUFRLEdBQVIsUUFBUSxDQUFRO1FBZTVCLGtCQUFhLEdBQUcsQ0FBQyxDQUF5QixFQUFFLEVBQUU7WUFDbkQsSUFBSSxDQUFDLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsUUFBUTtnQkFBRSxPQUFNO1lBQ3hFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBYSxDQUFBO1lBQzdDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7WUFDMUIsaUJBQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxFQUFFO2dCQUN4RCxRQUFRLEVBQUUsQ0FBQyxDQUFDLFFBQVE7Z0JBQ3BCLFFBQVEsRUFBRSxDQUFDLENBQUMsUUFBUTtnQkFDcEIsV0FBVyxFQUFFLENBQUMsQ0FBQyxXQUFXO2dCQUMxQixHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUc7Z0JBQ1YsS0FBSzthQUNOLENBQUMsQ0FBQTtRQUNKLENBQUMsQ0FBQTtRQXhCQyxpQkFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQ2Ysc0NBQXNDLEVBQ3RDLElBQUksQ0FBQyxhQUFhLENBQ25CLENBQUE7SUFDSCxDQUFDO0lBRU0sT0FBTztRQUNaLGlCQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FDM0Isc0NBQXNDLEVBQ3RDLElBQUksQ0FBQyxhQUFhLENBQ25CLENBQUE7SUFDSCxDQUFDO0NBY0Y7QUEvQkQsd0NBK0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVtb3RlIH0gZnJvbSAnZWxlY3Ryb24nXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElQQ0NtZCB7XHJcbiAgc2Nyb2xsVG9CdWZmZXJSYW5nZTogKGFyZzogW251bWJlciwgbnVtYmVyXSkgPT4gdm9pZFxyXG4gIGRlc3Ryb3k6IChhcmc6IHZvaWQpID0+IHZvaWRcclxuICBpbml0OiAoXHJcbiAgICBhcmc6IHZvaWQsXHJcbiAgKSA9PiB7XHJcbiAgICB0ZXh0OiBzdHJpbmdcclxuICAgIHRpdGxlOiBzdHJpbmdcclxuICAgIGdyYW1tYXI6IHN0cmluZ1xyXG4gICAgcGF0aDogc3RyaW5nIHwgdW5kZWZpbmVkXHJcbiAgfVxyXG4gIG9wZW5Tb3VyY2U6IChhcmc/OiBudW1iZXIpID0+IHZvaWRcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgRXZlbnRGb3IgPSB7XHJcbiAgW0sgaW4ga2V5b2YgSVBDQ21kXToge1xyXG4gICAgZWRpdG9ySWQ6IG51bWJlclxyXG4gICAgd2luZG93SWQ6IG51bWJlclxyXG4gICAgZm9yV2luZG93SWQ6IG51bWJlclxyXG4gICAgaWR4OiBudW1iZXJcclxuICAgIGNtZDogS1xyXG4gICAgYXJnczogQXJnPElQQ0NtZFtLXT5cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEFyZzxUIGV4dGVuZHMgKGFyZzogYW55KSA9PiBhbnk+ID0gVCBleHRlbmRzIChhcmc6IGluZmVyIFUpID0+IGFueVxyXG4gID8gVVxyXG4gIDogbmV2ZXJcclxuXHJcbmV4cG9ydCBjbGFzcyBSZXF1ZXN0SGFuZGxlciB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IHdpbmRvd0lkOiBudW1iZXIsXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGVkaXRvcklkOiBudW1iZXIsXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGhhbmRsZXJzOiBJUENDbWQsXHJcbiAgKSB7XHJcbiAgICByZW1vdGUuaXBjTWFpbi5vbihcclxuICAgICAgJ21hcmtkb3duLXByZXZpZXctcGx1czplZGl0b3ItcmVxdWVzdCcsXHJcbiAgICAgIHRoaXMuaGFuZGxlUmVxdWVzdCxcclxuICAgIClcclxuICB9XHJcblxyXG4gIHB1YmxpYyBkaXNwb3NlKCkge1xyXG4gICAgcmVtb3RlLmlwY01haW4ucmVtb3ZlTGlzdGVuZXIoXHJcbiAgICAgICdtYXJrZG93bi1wcmV2aWV3LXBsdXM6ZWRpdG9yLXJlcXVlc3QnLFxyXG4gICAgICB0aGlzLmhhbmRsZVJlcXVlc3QsXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaGFuZGxlUmVxdWVzdCA9IChlOiBFdmVudEZvcltrZXlvZiBJUENDbWRdKSA9PiB7XHJcbiAgICBpZiAoZS5lZGl0b3JJZCAhPT0gdGhpcy5lZGl0b3JJZCB8fCBlLndpbmRvd0lkICE9PSB0aGlzLndpbmRvd0lkKSByZXR1cm5cclxuICAgIGNvbnN0IGZ1bmMgPSB0aGlzLmhhbmRsZXJzW2UuY21kXSBhcyBGdW5jdGlvblxyXG4gICAgY29uc3QgcmVwbHkgPSBmdW5jKGUuYXJncylcclxuICAgIHJlbW90ZS5pcGNNYWluLmVtaXQoJ21hcmtkb3duLXByZXZpZXctcGx1czplZGl0b3ItcmVwbHknLCB7XHJcbiAgICAgIGVkaXRvcklkOiBlLmVkaXRvcklkLFxyXG4gICAgICB3aW5kb3dJZDogZS53aW5kb3dJZCxcclxuICAgICAgZm9yV2luZG93SWQ6IGUuZm9yV2luZG93SWQsXHJcbiAgICAgIGlkeDogZS5pZHgsXHJcbiAgICAgIHJlcGx5LFxyXG4gICAgfSlcclxuICB9XHJcbn1cclxuIl19