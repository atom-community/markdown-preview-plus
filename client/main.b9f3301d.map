{"version":3,"sources":["util.ts","mathjax-helper.ts","update-preview.ts","0","main.ts"],"names":["getMedia","document","querySelectorAll","Object","defineProperty","exports","value"],"mappings":"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","file":"main.b9f3301d.map","sourceRoot":"../src-client","sourcesContent":["export function handlePromise(promise: Promise<any>): void {\n  if (!promise) return\n  promise.catch((error: Error) => {\n    console.error(error)\n  })\n}\nimport { lstatSync, existsSync } from 'fs'\nexport function isFileSync(filePath: string) {\n  if (!existsSync(filePath)) return false\n  return lstatSync(filePath).isFile()\n}\n\nexport function resolveElement(\n  root: Element,\n  pathToToken: Array<{ tag: string; index: number }>,\n): Element | undefined {\n  let element = root\n  for (const token of pathToToken) {\n    const candidateElement: HTMLElement | null = element\n      .querySelectorAll(`:scope > ${token.tag}`)\n      .item(token.index) as HTMLElement\n    if (candidateElement) {\n      element = candidateElement\n    } else {\n      break\n    }\n  }\n\n  if (element === root) return undefined // Do not jump to the top of the preview for bad syncs\n  return element\n}\n","//\n// mathjax-helper\n//\n// This module will handle loading the MathJax environment and provide a wrapper\n// for calls to MathJax to process LaTeX equations.\n//\n\nimport path = require('path')\nimport CSON = require('season')\nimport fs = require('fs')\nimport { isFileSync } from './util'\n\nconst mjSrc = `${global.require.resolve(\n  'mathjax',\n)}?delayStartupUntil=configured`\n\n//\n// Process DOM elements for LaTeX equations with MathJax\n//\n// @param domElements An array of DOM elements to be processed by MathJax. See\n//   [element](https://developer.mozilla.org/en-US/docs/Web/API/element) for\n//   details on DOM elements.\n//\nexport async function mathProcessor(domElement: Node) {\n  await loadMathJax()\n  await queueTypeset(domElement)\n}\n\n//\n// Process maths in HTML fragment with MathJax\n//\n// @param html A HTML fragment string\n// @param callback A callback method that accepts a single parameter, a HTML\n//   fragment string that is the result of html processed by MathJax\n//\nexport async function processHTMLString(element: Element) {\n  const msvgh = document.getElementById('MathJax_SVG_Hidden')\n  const svgGlyphs = msvgh && msvgh.parentElement\n  if (svgGlyphs !== null) {\n    return svgGlyphs.innerHTML + element.innerHTML\n  } else {\n    return element.innerHTML\n  }\n}\n\nexport async function rerenderMath() {\n  if (mjPromise !== undefined) {\n    await mjPromise\n    return new Promise<void>((resolve) => {\n      MathJax.Hub.Queue(['Rerender', MathJax.Hub])\n      MathJax.Hub.Queue([resolve])\n    })\n  } else {\n    return\n  }\n}\n\n//\n// Load MathJax environment\nlet mjPromise: Promise<void> | undefined\nasync function loadMathJax(): Promise<void> {\n  if (mjPromise) return mjPromise\n  mjPromise = attachMathJax()\n  return mjPromise\n}\n\n// for testing\nexport function unloadMathJax(): void {\n  mjPromise = undefined\n  const script = document.head.querySelector(`script[src='${mjSrc}']`)\n  if (script) script.remove()\n}\n\nexport async function jaxTeXConfig() {\n  let userMacros = await loadUserMacros()\n  if (userMacros) {\n    userMacros = checkMacros(userMacros)\n  } else {\n    userMacros = {}\n  }\n  const mathJaxConfig: MathJaxConfig = await window.atomVars.mathJaxConfig\n\n  return {\n    extensions: mathJaxConfig.texExtensions,\n    Macros: userMacros,\n    equationNumbers: mathJaxConfig.numberEquations\n      ? {\n          autoNumber: 'AMS',\n          useLabelIds: false,\n        }\n      : {},\n  }\n}\n\n// private\n\nasync function getUserMacrosPath(): Promise<string> {\n  const home = await window.atomVars.home\n  const userMacrosPath: string | undefined | null = CSON.resolve(\n    path.join(home, 'markdown-preview-plus'),\n  )\n  return userMacrosPath != null\n    ? userMacrosPath\n    : path.join(home, 'markdown-preview-plus.cson')\n}\n\nfunction loadMacrosFile(filePath: string): object {\n  if (!CSON.isObjectPath(filePath)) {\n    return {}\n  }\n  return CSON.readFileSync(filePath, function(error?: Error, object?: object) {\n    if (object === undefined) {\n      object = {}\n    }\n    if (error !== undefined) {\n      console.warn(\n        `Error reading Latex Macros file '${filePath}': ${\n          error.stack !== undefined ? error.stack : error\n        }`,\n      )\n      console.error(`Failed to load Latex Macros from '${filePath}'`, {\n        detail: error.message,\n        dismissable: true,\n      })\n    }\n    return object\n  })\n}\n\nasync function loadUserMacros() {\n  const userMacrosPath = await getUserMacrosPath()\n  if (isFileSync(userMacrosPath)) {\n    return loadMacrosFile(userMacrosPath)\n  } else {\n    console.debug(\n      'Creating markdown-preview-plus.cson, this is a one-time operation.',\n    )\n    createMacrosTemplate(userMacrosPath)\n    return loadMacrosFile(userMacrosPath)\n  }\n}\n\nfunction createMacrosTemplate(filePath: string) {\n  const templatePath = path.join(__dirname, '../assets/macros-template.cson')\n  const templateFile = fs.readFileSync(templatePath, 'utf8')\n  fs.writeFileSync(filePath, templateFile)\n}\n\nfunction checkMacros(macrosObject: object) {\n  const namePattern = /^[^a-zA-Z\\d\\s]$|^[a-zA-Z]*$/ // letters, but no numerals.\n  for (const name in macrosObject) {\n    const value = macrosObject[name]\n    if (!name.match(namePattern) || !valueMatchesPattern(value)) {\n      delete macrosObject[name]\n      console.error(\n        `Failed to load LaTeX macro named '${name}'. Please see the [LaTeX guide](https://github.com/atom-community/markdown-preview-plus/blob/master/docs/math.md#macro-names)`,\n      )\n    }\n  }\n  return macrosObject\n}\n\nfunction valueMatchesPattern(value: any) {\n  // Different check based on whether value is string or array\n  if (Array.isArray(value)) {\n    const macroDefinition = value[0]\n    const numberOfArgs = value[1]\n    if (typeof numberOfArgs === 'number') {\n      return numberOfArgs % 1 === 0 && typeof macroDefinition === 'string'\n    } else {\n      return false\n    }\n  } else if (typeof value === 'string') {\n    return true\n  } else {\n    return false\n  }\n}\n\n// Configure MathJax environment. Similar to the TeX-AMS_HTML configuration with\n// a few unnecessary features stripped away\n//\nasync function configureMathJax() {\n  const mathJaxConfig = await window.atomVars.mathJaxConfig\n  MathJax.Hub.Config({\n    jax: ['input/TeX', `output/${mathJaxConfig.renderer}`],\n    extensions: [],\n    TeX: await jaxTeXConfig(),\n    'HTML-CSS': {\n      availableFonts: [],\n      webFont: 'TeX',\n      imageFont: null as any, // TODO: complain on DT\n      undefinedFamily: mathJaxConfig.undefinedFamily as any, // TODO: complain on DT\n      mtextFontInherit: true,\n    },\n    messageStyle: 'none',\n    showMathMenu: false,\n    skipStartupTypeset: true,\n  })\n  MathJax.Hub.Configured()\n\n  // Notify user MathJax has loaded\n  console.log('Loaded maths rendering engine MathJax')\n}\n\n//\n// Attach main MathJax script to the document\n//\nasync function attachMathJax(): Promise<void> {\n  console.log('Loading maths rendering engine MathJax')\n\n  // Attach MathJax script\n  await Promise.all([injectScript(mjSrc)])\n  await configureMathJax()\n}\n\nasync function injectScript(scriptSrc: string) {\n  const script = document.createElement('script')\n  script.src = scriptSrc\n  script.type = 'text/javascript'\n  document.head.appendChild(script)\n  return new Promise<void>((resolve) => {\n    script.addEventListener('load', () => resolve())\n  })\n}\n\nasync function queueTypeset(domElement: Node) {\n  const hasUnprocessedMath = Array.from(\n    document.querySelectorAll('script[type^=\"math/tex\"]'),\n  ).some((x) => !x.id)\n  if (!hasUnprocessedMath) return\n  const mathJaxConfig: MathJaxConfig = await window.atomVars.mathJaxConfig\n  return new Promise<void>((resolve) => {\n    if (MathJax.InputJax.TeX) {\n      MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX])\n      if (mathJaxConfig.numberEquations) {\n        MathJax.Hub.Queue(['PreProcess', MathJax.Hub])\n        MathJax.Hub.Queue(['Reprocess', MathJax.Hub])\n      }\n    }\n\n    MathJax.Hub.Queue(['Typeset', MathJax.Hub, domElement])\n    MathJax.Hub.Queue([resolve])\n  })\n}\n","// This file incorporates code from [markmon](https://github.com/yyjhao/markmon)\n// covered by the following terms:\n//\n// Copyright (c) 2014, Yao Yujian, http://yjyao.com\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport morph = require('morphdom')\nimport MathJaxHelper = require('./mathjax-helper')\n\nexport class UpdatePreview {\n  constructor(private dom: HTMLElement) {\n    /* no-op */\n  }\n\n  public async update(newDom: Element, renderLaTeX: boolean): Promise<void> {\n    for (const m of Array.from(newDom.querySelectorAll('span.math'))) {\n      const mscr = m.firstElementChild as HTMLScriptElement | null\n      if (!mscr || mscr.nodeName !== 'SCRIPT') continue\n      m.isSameNode = function(target: Node) {\n        if (target.nodeName !== 'SPAN') return false\n        const el = target as HTMLSpanElement\n        if (!el.classList.contains('math')) return false\n        const scr = el.querySelector('script')\n        if (!scr) return false\n        return mscr.innerHTML === scr.innerHTML && mscr.type === scr.type\n      }\n    }\n\n    morph(this.dom, newDom, {\n      childrenOnly: true,\n    })\n\n    // A very specific fix for #386 and #406\n    for (const li of this.dom.querySelectorAll('li')) {\n      if (\n        li.firstElementChild &&\n        li.firstElementChild === li.lastElementChild &&\n        li.firstElementChild.tagName === 'P' &&\n        li.firstChild &&\n        li.firstChild.nodeType === Node.TEXT_NODE &&\n        li.firstChild.textContent === '\\n'\n      ) {\n        li.removeChild(li.firstChild)\n      }\n    }\n\n    if (renderLaTeX) {\n      return MathJaxHelper.mathProcessor(this.dom)\n    }\n  }\n}\n",null,"import { ipcRenderer } from 'electron'\nimport { UpdatePreview } from './update-preview'\nimport { processHTMLString, jaxTeXConfig, rerenderMath } from './mathjax-helper'\nimport * as util from './util'\nimport { getMedia } from '../src/util-common'\n\nwindow.addEventListener('error', (e) => {\n  const err = e.error as Error\n  ipcRenderer.sendToHost<'uncaught-error'>('uncaught-error', {\n    message: err.message,\n    name: err.name,\n    stack: err.stack,\n  })\n})\n\nwindow.addEventListener('unhandledrejection', (evt) => {\n  const err = (evt as any).reason as Error\n  ipcRenderer.sendToHost<'uncaught-error'>('uncaught-error', {\n    message: err.message,\n    name: err.name,\n    stack: err.stack,\n  })\n})\n\nfunction mkResPromise<T>(): ResolvablePromise<T> {\n  let resFn: (value?: T | PromiseLike<T> | undefined) => void\n  const p = new Promise<T>((resolve) => (resFn = resolve)) as ResolvablePromise<\n    T\n  >\n  p.resolve = resFn!\n  return p\n}\n\nwindow.atomVars = {\n  home: mkResPromise(),\n  mathJaxConfig: mkResPromise(),\n  sourceLineMap: new Map(),\n  revSourceMap: new WeakMap(),\n}\n\nipcRenderer.on<'init'>(\n  'init',\n  (_evt, { atomHome, mathJaxConfig, mathJaxRenderer }) => {\n    window.atomVars.home.resolve(atomHome)\n    window.atomVars.mathJaxConfig.resolve({\n      ...mathJaxConfig,\n      renderer: mathJaxRenderer,\n    })\n  },\n)\n\nipcRenderer.on<'set-source-map'>('set-source-map', (_evt, { map }) => {\n  const root = document.querySelector('div.update-preview')\n  if (!root) throw new Error('No root element!')\n  const slsm = new Map<number, Element>()\n  const rsm = new WeakMap<Element, number[]>()\n  for (const lineS of Object.keys(map)) {\n    const line = parseInt(lineS, 10)\n    const path = map[line]\n    const elem = util.resolveElement(root, path)\n    if (elem) {\n      slsm.set(line, elem)\n      const rsmel = rsm.get(elem)\n      if (rsmel) rsmel.push(line)\n      else rsm.set(elem, [line])\n    }\n  }\n  window.atomVars.sourceLineMap = slsm\n  window.atomVars.revSourceMap = rsm\n})\n\nipcRenderer.on<'scroll-sync'>(\n  'scroll-sync',\n  (_evt, { firstLine, lastLine }) => {\n    const mean = Math.floor(0.5 * (firstLine + lastLine))\n    const slm = window.atomVars.sourceLineMap\n    let topLine\n    let topBound\n    for (topLine = mean; topLine >= 0; topLine -= 1) {\n      topBound = slm.get(topLine)\n      if (topBound) break\n    }\n    if (!topBound) return\n\n    const max = Math.max(...Array.from(slm.keys()))\n    let bottomLine\n    let bottomBound\n    for (bottomLine = mean + 1; bottomLine < max; bottomLine += 1) {\n      bottomBound = slm.get(bottomLine)\n      if (bottomBound) break\n    }\n    if (!bottomBound) return\n    const topScroll = topBound.getBoundingClientRect().top\n    const bottomScroll = bottomBound.getBoundingClientRect().top\n    const frac = (mean - firstLine) / (lastLine - firstLine)\n    const offset = document.documentElement.scrollTop\n    const clientHeight = document.documentElement.clientHeight\n    const top =\n      offset - clientHeight / 2 + topScroll + frac * (bottomScroll - topScroll)\n    window.scroll({ top })\n  },\n)\n\nipcRenderer.on<'style'>('style', (_event, { styles }) => {\n  let styleElem = document.head.querySelector('style#atom-styles')\n  if (!styleElem) {\n    styleElem = document.createElement('style')\n    styleElem.id = 'atom-styles'\n    document.head.appendChild(styleElem)\n  }\n  styleElem.innerHTML = styles.join('\\n')\n})\n\nipcRenderer.on<'update-images'>('update-images', (_event, { oldsrc, v }) => {\n  const imgs = getMedia(document)\n  for (const img of Array.from(imgs)) {\n    let ovs: string | undefined\n    let ov: number | undefined\n    let attrName: 'href' | 'src'\n    if (img.tagName === 'LINK') attrName = 'href'\n    else attrName = 'src'\n    let src = img.getAttribute(attrName)!\n    const match = src.match(/^(.*)\\?v=(\\d+)$/)\n    if (match) [, src, ovs] = match\n    if (src === oldsrc) {\n      if (ovs !== undefined) ov = parseInt(ovs, 10)\n      if (v !== ov) img[attrName] = v ? `${src}?v=${v}` : `${src}`\n    }\n  }\n})\n\nipcRenderer.on<'sync'>('sync', (_event, { line, flash }) => {\n  const root = document.querySelector('div.update-preview')\n  if (!root) return\n\n  let element = window.atomVars.sourceLineMap.get(line)\n\n  if (!element) {\n    for (let i = line - 1; i >= 0; i -= 1) {\n      element = window.atomVars.sourceLineMap.get(line)\n      if (element) break\n    }\n  }\n\n  if (!element) return\n\n  element.scrollIntoViewIfNeeded(true)\n\n  if (flash) {\n    element.classList.add('flash')\n    setTimeout(() => element!.classList.remove('flash'), 1000)\n  }\n})\n\nlet updatePreview: UpdatePreview | undefined\n\nipcRenderer.on<'update-preview'>(\n  'update-preview',\n  (_event, { id, html, renderLaTeX }) => {\n    // div.update-preview created after constructor st UpdatePreview cannot\n    // be instanced in the constructor\n    const preview = document.querySelector('div.update-preview')\n    if (!preview) return\n    if (!updatePreview) {\n      updatePreview = new UpdatePreview(preview as HTMLElement)\n    }\n    const parser = new DOMParser()\n    const domDocument = parser.parseFromString(html, 'text/html')\n    util.handlePromise(\n      updatePreview.update(domDocument.body, renderLaTeX).then(async () => {\n        ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n          id,\n          request: 'update-preview',\n          result: await processHTMLString(preview),\n        })\n      }),\n    )\n    const doc = document\n    if (doc && domDocument.head.hasChildNodes) {\n      let container = doc.head.querySelector('original-elements')\n      if (!container) {\n        container = doc.createElement('original-elements')\n        doc.head.appendChild(container)\n      }\n      container.innerHTML = ''\n      for (const headElement of Array.from(domDocument.head.childNodes)) {\n        container.appendChild(headElement)\n      }\n    }\n  },\n)\n\nconst baseElement = document.createElement('base')\ndocument.head.appendChild(baseElement)\n\nipcRenderer.on<'set-base-path'>('set-base-path', (_evt, { path }) => {\n  if (path) baseElement.href = path\n  else baseElement.href = ''\n})\n\nipcRenderer.on<'error'>('error', (_evt, { msg }) => {\n  const preview = document.querySelector('div.update-preview')\n  if (!preview) return\n  const errorDiv = document.createElement('div')\n  errorDiv.innerHTML = `<h2>Previewing Markdown Failed</h2><h3>${msg}</h3>`\n  preview.appendChild(errorDiv)\n})\n\ndocument.addEventListener('mousewheel', (event) => {\n  if (event.ctrlKey) {\n    if (event.wheelDeltaY > 0) {\n      ipcRenderer.sendToHost<'zoom-in'>('zoom-in', undefined)\n    } else if (event.wheelDeltaY < 0) {\n      ipcRenderer.sendToHost<'zoom-out'>('zoom-out', undefined)\n    }\n    event.preventDefault()\n    event.stopPropagation()\n  }\n})\n\ndocument.addEventListener('scroll', (_event) => {\n  const el = document.documentElement\n  const height = el.clientHeight\n  const visible = Array.from(window.atomVars.sourceLineMap.entries())\n    .filter(([_line, elem]) => {\n      const { top, bottom } = elem.getBoundingClientRect()\n      return top > 0 && bottom < height\n    })\n    .map(([line, _elem]) => line)\n  ipcRenderer.sendToHost<'did-scroll-preview'>('did-scroll-preview', {\n    max: Math.max(...visible),\n    min: Math.min(...visible),\n  })\n})\n\nlet lastContextMenuTarget: HTMLElement\ndocument.addEventListener('contextmenu', (e) => {\n  lastContextMenuTarget = e.target as HTMLElement\n})\n\nipcRenderer.on<'sync-source'>('sync-source', (_, { id }) => {\n  let element = lastContextMenuTarget\n  const rsm = window.atomVars.revSourceMap\n  let lines = rsm.get(element)\n\n  while (!lines && element.parentElement) {\n    element = element.parentElement\n    lines = rsm.get(element)\n  }\n  if (!lines) return\n\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'sync-source',\n    result: Math.min(...lines),\n  })\n})\n\nipcRenderer.on<'reload'>('reload', (_, { id }) => {\n  window.onbeforeunload = null\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'reload',\n    result: undefined,\n  })\n})\n\nwindow.onbeforeunload = function() {\n  return false\n}\n\nipcRenderer.on<'get-tex-config'>('get-tex-config', async (_, { id }) => {\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'get-tex-config',\n    result: await jaxTeXConfig(),\n  })\n})\n\nipcRenderer.on<'set-width'>('set-width', async (_, { id, width }) => {\n  if (width === undefined) {\n    document.documentElement.style.removeProperty('width')\n  } else {\n    document.documentElement.style.setProperty(\n      'width',\n      `${width}mm`,\n      'important',\n    )\n  }\n  await rerenderMath()\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'set-width',\n    result: undefined,\n  })\n})\n\nipcRenderer.on<'get-selection'>('get-selection', async (_, { id }) => {\n  const selection = window.getSelection()\n  const selectedText = selection.toString()\n  const selectedNode = selection.baseNode\n\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'get-selection',\n    result: selectedText && selectedNode ? selectedText : undefined,\n  })\n})\n"]}